{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/material/button\";\nimport * as i3 from \"@angular/router\";\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(http) {\n      this.http = http;\n      this.title = 'fetchProject';\n      this.lis = [];\n    }\n\n    ngOnInit() {\n      this.http.get('http://www.mocky.io/v2/5ea172973100002d001eeada').subscribe(Response => {\n        if (Response) {\n          hideloader();\n        }\n\n        console.log(Response);\n        this.li = Response;\n        this.lis = this.li.list;\n        listOfFetchedDetails(this.lis);\n      });\n\n      function hideloader() {\n        document.getElementById('load').style.visibility = 'hidden';\n      }\n\n      const searchtext = document.getElementById('goSearch');\n      searchtext === null || searchtext === void 0 ? void 0 : searchtext.addEventListener('click', e => {\n        let inputValue = document.getElementById('searchText').value.trim();\n        getSearchedEmployees(inputValue, this.lis);\n      });\n\n      function listOfFetchedDetails(lis) {\n        var flag = 0;\n\n        for (let i of lis) {\n          let card = document.createElement(\"div\");\n          let pos = i.name.replace(/\\s+/g, '').toUpperCase();\n          card.classList.add(\"card\", pos);\n          console.log(\"classList : \" + card.classList);\n          card.setAttribute(\"id\", \"empDiv\" + flag);\n          let container = document.createElement(\"div\");\n          container.classList.add(\"container\");\n          let eName = document.createElement(\"h1\");\n          eName.classList.add(\"employee-name\");\n          eName.innerHTML = \"<b>\" + i.name + \"</b>\";\n          container.appendChild(eName);\n          let salary = document.createElement(\"p\");\n          salary.innerHTML = \"<b>Salary : </b>\" + \" \" + i.salary;\n          container.appendChild(salary);\n          let position = document.createElement(\"p\");\n          position.innerHTML = \"<b>position : </b>\" + \" \" + i.position;\n          container.appendChild(position);\n          card.appendChild(container);\n          document.getElementById(\"employeeCard\").appendChild(card); // divCreator(i)\n\n          document.getElementById('empDiv' + flag).style.border = \"2px solid black\";\n          document.getElementById('empDiv' + flag).style.margin = \"5px\";\n          document.getElementById('empDiv' + flag).style.textAlign = \"center\";\n          document.getElementById('empDiv' + flag).style.boxShadow = \"2px 5px 10px 5px skyblue\"; // textAdder(i,\"Name : \",lis[i]['name'])\n          // textAdder(i,\"Office : \",lis[i]['office'])\n          // textAdder(i,\"position : \",lis[i]['position'])\n          // textAdder(i,\"Salary : \",lis[i]['salary'])\n\n          flag++;\n        }\n      }\n\n      var divCreator = function (id) {\n        const newElement = document.createElement(\"div\");\n        newElement.className = \"singleCard\";\n        const newNode = document.getElementById('employeeCard').appendChild(newElement);\n        newNode.setAttribute(\"id\", 'div' + id);\n      };\n\n      var textAdder = function (id, attribute, text) {\n        const target = document.getElementById('div' + id);\n        target.appendChild(document.createTextNode(attribute));\n        target.innerHTML += \"<b>\" + text + \"</b>\";\n        target.innerHTML += \"<br>\";\n      };\n\n      function getSearchedEmployees(text, lis) {\n        var cur = 0;\n        let elements = document.querySelectorAll(\".employee-name\");\n        let flag = 0;\n        elements.forEach((element, index) => {\n          if (element.innerHTML.includes(text.toUpperCase())) {\n            document.getElementById('empDiv' + cur).style.display = \"inherit\";\n            flag++;\n          } else {\n            document.getElementById('empDiv' + cur).style.display = \"none\";\n          }\n\n          cur++;\n        });\n        document.getElementById('showError').style.marginTop = \"10px\";\n        document.getElementById('showError').style.color = \"red\";\n\n        if (flag == 0) {\n          document.getElementById('showError').style.display = \"inherit\";\n          document.getElementById('showError').innerHTML = \"* Nothing TO Show *\";\n        } else {\n          document.getElementById('showError').style.display = \"none\";\n        }\n      }\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 13,\n    vars: 0,\n    consts: [[1, \"top\", 2, \"margin-top\", \"20px\"], [1, \"top\"], [\"type\", \"text\", \"id\", \"searchText\", \"title\", \"search\", \"placeholder\", \"search Employee From Here..!\"], [\"type\", \"button\", \"mat-button\", \"\", \"id\", \"goSearch\", \"onkeyup\", \"getSearchedEmployees()\", 1, \"btn\", \"btn-primary\"], [\"id\", \"showError\"], [1, \"d-flex\", \"justify-content-center\"], [\"role\", \"status\", \"id\", \"load\", 1, \"spinner-border\"], [\"id\", \"loading\", 1, \"sr-only\"], [\"id\", \"employeeCard\", 1, \"employeeCards\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\", 0);\n        i0.ɵɵtext(1, \"Registered Employees\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 1);\n        i0.ɵɵelement(3, \"input\", 2);\n        i0.ɵɵelementStart(4, \"button\", 3);\n        i0.ɵɵtext(5, \"Submit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"label\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 5)(8, \"div\", 6)(9, \"span\", 7);\n        i0.ɵɵtext(10, \"Loading...\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(11, \"div\", 8)(12, \"router-outlet\");\n      }\n    },\n    directives: [i2.MatButton, i3.RouterOutlet],\n    styles: [\".top[_ngcontent-%COMP%]{text-align:center;display:flex;flex-direction:column;align-items:center}input[_ngcontent-%COMP%]{margin-top:20px;min-width:500px;max-width:500px;min-height:35px;border-radius:4px;border:2px solid black;box-shadow:3px 5px #000;font-size:large}.btn[_ngcontent-%COMP%]{margin-top:10px}.employeeCards[_ngcontent-%COMP%]{display:grid;grid-template-columns:auto auto auto;grid-column-gap:.8em;padding:1em 0}\"]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}